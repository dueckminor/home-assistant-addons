#!/bin/bash
# Build script for local development with multi-arch binaries

set -eou pipefail
ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}" )/.." && pwd )"
cd "${ROOT_DIR}"

echo "Building binaries for all supported architectures..."

# Clean up old binaries
rm -f "${ROOT_DIR}/addons/gateway/gateway" "${ROOT_DIR}/addons/gateway/gateway-"*
rm -f "${ROOT_DIR}/addons/mqtt-bridge/mqtt-bridge" "${ROOT_DIR}/addons/mqtt-bridge/mqtt-bridge-"*
rm -rf "${ROOT_DIR}/addons/gateway/dist"

# Build web assets for gateway
echo "Building web assets..."

pushd "${ROOT_DIR}/web/auth"
npm ci
npm run build
popd

pushd "${ROOT_DIR}/web/gatewayconfig"
npm ci
npm run build
popd

# Build Go binaries for all architectures (for platform selector)
echo "Building AMD64 binaries..."
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o addons/gateway/gateway-amd64 ./go/tools/gateway/
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o addons/mqtt-bridge/mqtt-bridge-amd64 ./go/tools/mqtt-bridge/

echo "Building ARM64 binaries..."
CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o addons/gateway/gateway-arm64 ./go/tools/gateway/
CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o addons/mqtt-bridge/mqtt-bridge-arm64 ./go/tools/mqtt-bridge/

echo "Build completed successfully!"
echo ""
echo "Built binaries:"
echo "  Gateway: gateway-amd64, gateway-arm64, gateway (default)"
echo "  MQTT Bridge: mqtt-bridge-amd64, mqtt-bridge-arm64, mqtt-bridge (default)"
echo ""
echo "To test locally:"
echo "  docker build -t test-gateway ./addons/gateway/"
echo "  docker build -t test-mqtt-bridge ./addons/mqtt-bridge/"
echo ""
echo "The Docker build will automatically select the correct binary for the target architecture."